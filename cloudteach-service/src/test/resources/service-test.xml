<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">


    <context:annotation-config />

    <context:component-scan base-package="net.xuele.cloudteach" use-default-filters="false"  >
        <!-- 扫描符合 @Repository @Service的类 -->
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Repository"/>
        <context:include-filter type="annotation"
                                expression="com.alibaba.dubbo.config.annotation.Service"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Component"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- mysql 数据源 -->
    <!--<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
    destroy-method="close">
    &lt;!&ndash;<property name="driverClassName" value="org.h2.Driver"/>&ndash;&gt;
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://db.infra.xuele.net:3306/cloudteach"/>
    <property name="username" value="${mysql.username}"/>
    <property name="password" value="${mysql.userpwd}"/>
    </bean>-->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
        <property name="driverClassName" value="${mysql.driverClassName}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>

        <property name="initialSize" value="${mysql.initialSize}"/>
        <property name="maxActive" value="${mysql.maxActive}"/>
        <property name="maxIdle" value="${mysql.maxIdle}"/>
        <property name="minIdle" value="${mysql.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${mysql.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${mysql.minEvictableIdleTimeMillis}"/>


        <property name="validationQuery" value="${mysql.validationQuery}"/>
        <property name="testOnBorrow" value="${mysql.testOnBorrow}"/>
        <property name="testWhileIdle" value="${mysql.testWhileIdle}"/>
        <property name="validationInterval" value="${mysql.validationInterval}"/>
        <property name="validationQueryTimeout" value="${mysql.validationQueryTimeout}"/>

        <property name="removeAbandoned" value="${mysql.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${mysql.removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${mysql.logAbandoned}"/>
        <property name="defaultTransactionIsolation" value="2"/>

    </bean>

    <!-- mysql 数据源 end -->

    <!-- h2 数据源 -->
   <!-- <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
          destroy-method="close">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:WebMagic;MODE=MYSQL;DB_CLOSE_DELAY=-1"/>
    </bean>-->

    <!--Refer to https://github.com/springside/springside4/wiki/H2-Database -->
    <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
        <jdbc:script location="classpath:h2/cloudteach-import.sql" encoding="UTF-8" execution="INIT"/>
    </jdbc:initialize-database>

    <!-- h2 数据源 end -->

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>


    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="net.xuele.cloudteach.persist"/>
    </bean>


    <!--jedis-->
    <bean id="propertyConfigurerRedis" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="1"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:redis.properties</value>
            </list>
        </property>
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pass}"/>
        <property name="timeout" value="${redis.timeout}"/>
        <property name="database" value="${redis.default.db}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>

    <bean class="org.springframework.data.redis.core.RedisTemplate" p:connectionFactory-ref="jedisConnectionFactory"/>
</beans>